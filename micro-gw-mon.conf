[listenerConfig]
  host = "0.0.0.0"
  httpPort = 9190
  httpsPort = 9195
  keyStorePath = "${mgw-runtime.home}/runtime/bre/security/ballerinaKeystore.p12"
  keyStorePassword = "ballerina"
  trustStorePath = "${mgw-runtime.home}/runtime/bre/security/ballerinaTruststore.p12"
  trustStorePassword = "ballerina"
  tokenListenerPort = 9096

[keyManager]
  serverUrl = "https://localhost:8443"
  tokenContext = "oauth2"
  external = true
  issuer = "https://localhost:8443/auth/realms/master"
  [keymanager.security.oauth2]
    enabled = true
    tokenUrl = "https://localhost:8443/auth/realms/master/protocol/openid-connect/token"
    [keymanager.security.oauth2.password]
	  username = "admin"
      password = "admin"
	  clientId = "apim-client"
      clientSecret = "4a5e3919-d607-47eb-8c74-66fc1c6f0426"

[[jwtTokenConfig]]
  issuer = "https://localhost:8443/auth/realms/master"
  certificateAlias = "keycloak"
  validateSubscription = false
  consumerKeyClaim = "aud"
  audience = "account"
  jwksURL = "https://localhost:8443/auth/realms/master/protocol/openid-connect/certs"

[[jwtTokenConfig]]
  issuer = "http://localhost:8080/auth/realms/master"
  certificateAlias = "keycloak"
  validateSubscription = false
  consumerKeyClaim = "aud"
  audience = "account"
  jwksURL = "http://localhost:8080/auth/realms/master/protocol/openid-connect/certs"

[analytics]
  # The configured API Manager analytics stream version
  streamVersion = "3.2.0"
  [analytics.fileUpload]
    enable = false
    uploadingTimeSpanInMillis = 600000
    initialDelayInMillis = 5000
    uploadingEndpoint = "https://192.168.96.5:9444/analytics/v1.0/usage/upload-file"
    rotatingPeriod = 600000
    taskUploadFiles = true
    username = "admin"
    password = "admin"

[b7a.users]
  #[b7a.users.admin]
  # password = "d033e22ae348aeb5660fc2140aec35850c4da997"
  [b7a.users.prometheus]
	password= "@sha256:{5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8}"
	scopes= "observability"

[httpClients]
  verifyHostname = true

[apikey.issuer]
  [apikey.issuer.tokenConfig]
    enabled = true
    issuer = "https://localhost:9095/apikey"
    certificateAlias = "ballerina"
    validityTime = -1

# Throttling configurations
[throttlingConfig]
  enabledGlobalTMEventPublishing = false
  jmsConnectionProviderUrl = "amqp://admin:admin@carbon/carbon?brokerlist='tcp://localhost:5672'"
  # Throttling configurations related to event publishing using a binary connection
  [throttlingConfig.binary]
    enabled = true
    [[throttlingConfig.binary.URLGroup]]
      receiverURL = "tcp://localhost:9611"
      authURL = "ssl://localhost:9711"

[apim.eventHub]
  enable = false
  serviceUrl = "https://localhost:9443"
  internalDataContext="/internal/data/v1/"
  username="admin"
  password="admin"
  eventListeningEndpoints = "amqp://admin:admin@carbon/carbon?brokerlist='tcp://localhost:5672'"

[security]
  validateSubscriptions = false

# Enable http2 for the microgateway listeners.
[http2]
  enable = true
  
[b7a.observability.metrics]
enabled = true
reporter = "prometheus"
  
[b7a.observability.metrics.prometheus]
port=9797
jmx_port = 8080
secure_port = 9000
  
[b7a.observability.tracing]
enabled=true
name="jaeger"
[b7a.observability.tracing.jaeger.sampler]
type="const"
param=1.0
[b7a.observability.tracing.jaeger.reporter]
hostname="localhost"
port=5775
[b7a.observability.tracing.jaeger.reporter.flush.interval]
ms=2000
[b7a.observability.tracing.jaeger.reporter.max.buffer]
spans=1000


